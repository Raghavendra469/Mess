function cov_ixwu49mvz(){var path="C:\\capstone on friday\\Mess\\RMS\\server\\controllers\\authController.js";var hash="082079871f7f1d955ec8f2d18b898058c8283a3b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\capstone on friday\\Mess\\RMS\\server\\controllers\\authController.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:34}},"1":{start:{line:2,column:12},end:{line:2,column:45}},"2":{start:{line:3,column:12},end:{line:3,column:45}},"3":{start:{line:4,column:14},end:{line:4,column:31}},"4":{start:{line:5,column:19},end:{line:5,column:40}},"5":{start:{line:6,column:19},end:{line:6,column:21}},"6":{start:{line:8,column:14},end:{line:68,column:1}},"7":{start:{line:11,column:4},end:{line:67,column:5}},"8":{start:{line:12,column:36},end:{line:12,column:44}},"9":{start:{line:15,column:21},end:{line:15,column:50}},"10":{start:{line:17,column:8},end:{line:19,column:9}},"11":{start:{line:18,column:12},end:{line:18,column:85}},"12":{start:{line:22,column:8},end:{line:24,column:9}},"13":{start:{line:23,column:12},end:{line:23,column:89}},"14":{start:{line:27,column:8},end:{line:29,column:9}},"15":{start:{line:28,column:12},end:{line:28,column:103}},"16":{start:{line:32,column:24},end:{line:32,column:69}},"17":{start:{line:33,column:8},end:{line:35,column:9}},"18":{start:{line:34,column:12},end:{line:34,column:85}},"19":{start:{line:38,column:22},end:{line:48,column:9}},"20":{start:{line:51,column:8},end:{line:63,column:11}},"21":{start:{line:66,column:8},end:{line:66,column:78}},"22":{start:{line:71,column:15},end:{line:74,column:1}},"23":{start:{line:72,column:4},end:{line:72,column:42}},"24":{start:{line:73,column:4},end:{line:73,column:64}},"25":{start:{line:76,column:22},end:{line:118,column:1}},"26":{start:{line:77,column:22},end:{line:77,column:30}},"27":{start:{line:79,column:4},end:{line:117,column:5}},"28":{start:{line:80,column:21},end:{line:80,column:50}},"29":{start:{line:82,column:8},end:{line:84,column:9}},"30":{start:{line:83,column:12},end:{line:83,column:87}},"31":{start:{line:86,column:22},end:{line:86,column:90}},"32":{start:{line:88,column:28},end:{line:94,column:10}},"33":{start:{line:96,column:26},end:{line:96,column:85}},"34":{start:{line:98,column:28},end:{line:103,column:9}},"35":{start:{line:105,column:8},end:{line:112,column:11}},"36":{start:{line:106,column:12},end:{line:111,column:13}},"37":{start:{line:107,column:16},end:{line:107,column:53}},"38":{start:{line:108,column:16},end:{line:108,column:96}},"39":{start:{line:110,column:16},end:{line:110,column:102}},"40":{start:{line:115,column:8},end:{line:115,column:46}},"41":{start:{line:116,column:8},end:{line:116,column:83}},"42":{start:{line:120,column:21},end:{line:142,column:1}},"43":{start:{line:121,column:26},end:{line:121,column:36}},"44":{start:{line:122,column:25},end:{line:122,column:33}},"45":{start:{line:123,column:4},end:{line:123,column:53}},"46":{start:{line:125,column:4},end:{line:141,column:5}},"47":{start:{line:126,column:24},end:{line:126,column:62}},"48":{start:{line:128,column:8},end:{line:130,column:9}},"49":{start:{line:129,column:12},end:{line:129,column:97}},"50":{start:{line:132,column:31},end:{line:132,column:62}},"51":{start:{line:134,column:8},end:{line:134,column:85}},"52":{start:{line:135,column:8},end:{line:135,column:77}},"53":{start:{line:137,column:8},end:{line:137,column:74}},"54":{start:{line:139,column:8},end:{line:139,column:27}},"55":{start:{line:140,column:8},end:{line:140,column:83}},"56":{start:{line:147,column:0},end:{line:147,column:62}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:14},end:{line:8,column:15}},loc:{start:{line:8,column:34},end:{line:68,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:71,column:15},end:{line:71,column:16}},loc:{start:{line:71,column:27},end:{line:74,column:1}},line:71},"2":{name:"(anonymous_2)",decl:{start:{line:76,column:22},end:{line:76,column:23}},loc:{start:{line:76,column:42},end:{line:118,column:1}},line:76},"3":{name:"(anonymous_3)",decl:{start:{line:105,column:42},end:{line:105,column:43}},loc:{start:{line:105,column:59},end:{line:112,column:9}},line:105},"4":{name:"(anonymous_4)",decl:{start:{line:120,column:21},end:{line:120,column:22}},loc:{start:{line:120,column:41},end:{line:142,column:1}},line:120}},branchMap:{"0":{loc:{start:{line:17,column:8},end:{line:19,column:9}},type:"if",locations:[{start:{line:17,column:8},end:{line:19,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:17},"1":{loc:{start:{line:22,column:8},end:{line:24,column:9}},type:"if",locations:[{start:{line:22,column:8},end:{line:24,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:22},"2":{loc:{start:{line:27,column:8},end:{line:29,column:9}},type:"if",locations:[{start:{line:27,column:8},end:{line:29,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:27},"3":{loc:{start:{line:33,column:8},end:{line:35,column:9}},type:"if",locations:[{start:{line:33,column:8},end:{line:35,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:33},"4":{loc:{start:{line:82,column:8},end:{line:84,column:9}},type:"if",locations:[{start:{line:82,column:8},end:{line:84,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:82},"5":{loc:{start:{line:106,column:12},end:{line:111,column:13}},type:"if",locations:[{start:{line:106,column:12},end:{line:111,column:13}},{start:{line:109,column:19},end:{line:111,column:13}}],line:106},"6":{loc:{start:{line:128,column:8},end:{line:130,column:9}},type:"if",locations:[{start:{line:128,column:8},end:{line:130,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:128}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"082079871f7f1d955ec8f2d18b898058c8283a3b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_ixwu49mvz=function(){return actualCoverage;};}return actualCoverage;}cov_ixwu49mvz();const jwt=(cov_ixwu49mvz().s[0]++,require('jsonwebtoken'));const User=(cov_ixwu49mvz().s[1]++,require('../models/userModel.js'));const Song=(cov_ixwu49mvz().s[2]++,require('../models/songModel.js'));const bcrypt=(cov_ixwu49mvz().s[3]++,require('bcrypt'));const nodemailer=(cov_ixwu49mvz().s[4]++,require('nodemailer'));const saltRounds=(cov_ixwu49mvz().s[5]++,12);// 2^12 = 4096 rounds
cov_ixwu49mvz().s[6]++;const login=async(req,res)=>{cov_ixwu49mvz().f[0]++;cov_ixwu49mvz().s[7]++;// console.log("this is auhtController error")
try{const{email,password}=(cov_ixwu49mvz().s[8]++,req.body);// Find the user by email
const user=(cov_ixwu49mvz().s[9]++,await User.findOne({email}));cov_ixwu49mvz().s[10]++;if(!user){cov_ixwu49mvz().b[0][0]++;cov_ixwu49mvz().s[11]++;return res.status(404).json({success:false,error:'User not found'});// Stop further execution
}else{cov_ixwu49mvz().b[0][1]++;}// Check if the user is active
cov_ixwu49mvz().s[12]++;if(!user.isActive){cov_ixwu49mvz().b[1][0]++;cov_ixwu49mvz().s[13]++;return res.status(403).json({success:false,error:'User is not active'});}else{cov_ixwu49mvz().b[1][1]++;}// Check if the user is loging for the 1st time
cov_ixwu49mvz().s[14]++;if(user.isFirstLogin){cov_ixwu49mvz().b[2][0]++;cov_ixwu49mvz().s[15]++;return res.status(200).json({success:false,loginStatus:{status:'first time login'}});}else{cov_ixwu49mvz().b[2][1]++;}// Compare the provided password with the stored hash
const isMatch=(cov_ixwu49mvz().s[16]++,await bcrypt.compare(password,user.password));// Don't forget the 'await' here
cov_ixwu49mvz().s[17]++;if(!isMatch){cov_ixwu49mvz().b[3][0]++;cov_ixwu49mvz().s[18]++;return res.status(404).json({success:false,error:'Wrong password'});// Stop further execution
}else{cov_ixwu49mvz().b[3][1]++;}// Generate a JWT token
const token=(cov_ixwu49mvz().s[19]++,jwt.sign({_id:user._id,username:user.username,email:user.email,role:user.role,isActive:user.isActive,isFirstLogin:user.isFirstLogin,password:user.password},process.env.JWT_KEY,{expiresIn:'1h'}));// Send the response with the token and user details
cov_ixwu49mvz().s[20]++;return res.status(200).json({success:true,token,user:{_id:user._id,username:user.username,email:user.email,role:user.role,isActive:user.isActive,isFirstLogin:user.isFirstLogin}});}catch(error){cov_ixwu49mvz().s[21]++;// Handle server errors
return res.status(500).json({success:false,error:error.message});}};cov_ixwu49mvz().s[22]++;const verify=(req,res)=>{cov_ixwu49mvz().f[1]++;cov_ixwu49mvz().s[23]++;console.log("verify user--------",req);cov_ixwu49mvz().s[24]++;return res.status(200).json({success:true,user:req.user});};cov_ixwu49mvz().s[25]++;const forgotPassword=async(req,res)=>{cov_ixwu49mvz().f[2]++;const{email}=(cov_ixwu49mvz().s[26]++,req.body);cov_ixwu49mvz().s[27]++;try{const user=(cov_ixwu49mvz().s[28]++,await User.findOne({email}));cov_ixwu49mvz().s[29]++;if(!user){cov_ixwu49mvz().b[4][0]++;cov_ixwu49mvz().s[30]++;return res.status(404).json({success:false,message:"User not found"});}else{cov_ixwu49mvz().b[4][1]++;}const token=(cov_ixwu49mvz().s[31]++,jwt.sign({id:user._id},process.env.JWT_KEY,{expiresIn:'1d'}));const transporter=(cov_ixwu49mvz().s[32]++,nodemailer.createTransport({service:'gmail',auth:{user:process.env.EMAIL_USER,pass:process.env.EMAIL_PASS}}));const resetLink=(cov_ixwu49mvz().s[33]++,`http://localhost:5173/reset-password/${user._id}/${token}`);const mailOptions=(cov_ixwu49mvz().s[34]++,{from:process.env.EMAIL_USER,to:email,subject:'Reset your Password',text:`Click on the link to reset your password: ${resetLink}`});cov_ixwu49mvz().s[35]++;transporter.sendMail(mailOptions,(error,info)=>{cov_ixwu49mvz().f[3]++;cov_ixwu49mvz().s[36]++;if(error){cov_ixwu49mvz().b[5][0]++;cov_ixwu49mvz().s[37]++;console.error("Email error:",error);cov_ixwu49mvz().s[38]++;return res.status(500).json({success:false,message:"Error sending email"});}else{cov_ixwu49mvz().b[5][1]++;cov_ixwu49mvz().s[39]++;return res.json({success:true,message:"Password reset email sent successfully"});}});}catch(error){cov_ixwu49mvz().s[40]++;console.error("Server error:",error);cov_ixwu49mvz().s[41]++;res.status(500).json({success:false,message:"Internal server error"});}};cov_ixwu49mvz().s[42]++;const resetPassword=async(req,res)=>{cov_ixwu49mvz().f[4]++;const{id,token}=(cov_ixwu49mvz().s[43]++,req.params);const{password}=(cov_ixwu49mvz().s[44]++,req.body);cov_ixwu49mvz().s[45]++;console.log(req.body,'req.body======-----------');cov_ixwu49mvz().s[46]++;try{const decoded=(cov_ixwu49mvz().s[47]++,jwt.verify(token,process.env.JWT_KEY));cov_ixwu49mvz().s[48]++;if(!decoded){cov_ixwu49mvz().b[6][0]++;cov_ixwu49mvz().s[49]++;return res.status(400).json({success:false,message:"Invalid or expired token"});}else{cov_ixwu49mvz().b[6][1]++;}const hashedPassword=(cov_ixwu49mvz().s[50]++,await bcrypt.hash(password,10));cov_ixwu49mvz().s[51]++;await User.findByIdAndUpdate(id,{password:hashedPassword},{new:true});cov_ixwu49mvz().s[52]++;await User.findByIdAndUpdate(id,{isFirstLogin:false},{new:true});cov_ixwu49mvz().s[53]++;res.json({success:true,message:"Password reset successful"});}catch(err){cov_ixwu49mvz().s[54]++;console.error(err);cov_ixwu49mvz().s[55]++;res.status(500).json({success:false,message:"Internal server error"});}};cov_ixwu49mvz().s[56]++;module.exports={login,verify,forgotPassword,resetPassword};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,