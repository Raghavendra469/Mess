function cov_2il22vaf37(){var path="C:\\Users\\Sudipta.Barua\\Downloads\\final project all things done without nodemodule\\final project all things done without nodemodule\\server\\authenticationModule\\controllers\\authController.js";var hash="b4e0c721ffac588c3ce747fee2d56b42afd47a55";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Sudipta.Barua\\Downloads\\final project all things done without nodemodule\\final project all things done without nodemodule\\server\\authenticationModule\\controllers\\authController.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:34}},"1":{start:{line:2,column:12},end:{line:2,column:45}},"2":{start:{line:3,column:14},end:{line:3,column:31}},"3":{start:{line:4,column:19},end:{line:4,column:40}},"4":{start:{line:5,column:19},end:{line:5,column:21}},"5":{start:{line:7,column:14},end:{line:68,column:1}},"6":{start:{line:9,column:4},end:{line:67,column:5}},"7":{start:{line:10,column:8},end:{line:10,column:35}},"8":{start:{line:11,column:36},end:{line:11,column:44}},"9":{start:{line:12,column:8},end:{line:12,column:39}},"10":{start:{line:15,column:21},end:{line:15,column:50}},"11":{start:{line:17,column:8},end:{line:19,column:9}},"12":{start:{line:18,column:12},end:{line:18,column:85}},"13":{start:{line:22,column:8},end:{line:24,column:9}},"14":{start:{line:23,column:12},end:{line:23,column:89}},"15":{start:{line:27,column:8},end:{line:29,column:9}},"16":{start:{line:28,column:12},end:{line:28,column:103}},"17":{start:{line:32,column:24},end:{line:32,column:69}},"18":{start:{line:33,column:8},end:{line:35,column:9}},"19":{start:{line:34,column:12},end:{line:34,column:85}},"20":{start:{line:38,column:22},end:{line:48,column:9}},"21":{start:{line:51,column:8},end:{line:63,column:11}},"22":{start:{line:66,column:8},end:{line:66,column:78}},"23":{start:{line:71,column:15},end:{line:74,column:1}},"24":{start:{line:72,column:4},end:{line:72,column:42}},"25":{start:{line:73,column:4},end:{line:73,column:64}},"26":{start:{line:76,column:22},end:{line:118,column:1}},"27":{start:{line:77,column:22},end:{line:77,column:30}},"28":{start:{line:79,column:4},end:{line:117,column:5}},"29":{start:{line:80,column:21},end:{line:80,column:50}},"30":{start:{line:82,column:8},end:{line:84,column:9}},"31":{start:{line:83,column:12},end:{line:83,column:87}},"32":{start:{line:86,column:22},end:{line:86,column:91}},"33":{start:{line:88,column:28},end:{line:94,column:10}},"34":{start:{line:96,column:26},end:{line:96,column:85}},"35":{start:{line:98,column:28},end:{line:103,column:9}},"36":{start:{line:105,column:8},end:{line:112,column:11}},"37":{start:{line:106,column:12},end:{line:111,column:13}},"38":{start:{line:107,column:16},end:{line:107,column:53}},"39":{start:{line:108,column:16},end:{line:108,column:96}},"40":{start:{line:110,column:16},end:{line:110,column:102}},"41":{start:{line:115,column:8},end:{line:115,column:46}},"42":{start:{line:116,column:8},end:{line:116,column:83}},"43":{start:{line:120,column:21},end:{line:142,column:1}},"44":{start:{line:121,column:26},end:{line:121,column:36}},"45":{start:{line:122,column:25},end:{line:122,column:33}},"46":{start:{line:123,column:4},end:{line:123,column:53}},"47":{start:{line:125,column:4},end:{line:141,column:5}},"48":{start:{line:126,column:24},end:{line:126,column:62}},"49":{start:{line:128,column:8},end:{line:130,column:9}},"50":{start:{line:129,column:12},end:{line:129,column:97}},"51":{start:{line:132,column:31},end:{line:132,column:62}},"52":{start:{line:134,column:8},end:{line:134,column:85}},"53":{start:{line:135,column:8},end:{line:135,column:77}},"54":{start:{line:137,column:8},end:{line:137,column:74}},"55":{start:{line:139,column:8},end:{line:139,column:27}},"56":{start:{line:140,column:8},end:{line:140,column:83}},"57":{start:{line:147,column:0},end:{line:147,column:62}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:14},end:{line:7,column:15}},loc:{start:{line:7,column:34},end:{line:68,column:1}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:71,column:15},end:{line:71,column:16}},loc:{start:{line:71,column:27},end:{line:74,column:1}},line:71},"2":{name:"(anonymous_2)",decl:{start:{line:76,column:22},end:{line:76,column:23}},loc:{start:{line:76,column:42},end:{line:118,column:1}},line:76},"3":{name:"(anonymous_3)",decl:{start:{line:105,column:42},end:{line:105,column:43}},loc:{start:{line:105,column:59},end:{line:112,column:9}},line:105},"4":{name:"(anonymous_4)",decl:{start:{line:120,column:21},end:{line:120,column:22}},loc:{start:{line:120,column:41},end:{line:142,column:1}},line:120}},branchMap:{"0":{loc:{start:{line:17,column:8},end:{line:19,column:9}},type:"if",locations:[{start:{line:17,column:8},end:{line:19,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:17},"1":{loc:{start:{line:22,column:8},end:{line:24,column:9}},type:"if",locations:[{start:{line:22,column:8},end:{line:24,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:22},"2":{loc:{start:{line:27,column:8},end:{line:29,column:9}},type:"if",locations:[{start:{line:27,column:8},end:{line:29,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:27},"3":{loc:{start:{line:33,column:8},end:{line:35,column:9}},type:"if",locations:[{start:{line:33,column:8},end:{line:35,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:33},"4":{loc:{start:{line:82,column:8},end:{line:84,column:9}},type:"if",locations:[{start:{line:82,column:8},end:{line:84,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:82},"5":{loc:{start:{line:106,column:12},end:{line:111,column:13}},type:"if",locations:[{start:{line:106,column:12},end:{line:111,column:13}},{start:{line:109,column:19},end:{line:111,column:13}}],line:106},"6":{loc:{start:{line:128,column:8},end:{line:130,column:9}},type:"if",locations:[{start:{line:128,column:8},end:{line:130,column:9}},{start:{line:undefined,column:undefined},end:{line:undefined,column:undefined}}],line:128}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b4e0c721ffac588c3ce747fee2d56b42afd47a55"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2il22vaf37=function(){return actualCoverage;};}return actualCoverage;}cov_2il22vaf37();const jwt=(cov_2il22vaf37().s[0]++,require('jsonwebtoken'));const User=(cov_2il22vaf37().s[1]++,require('../models/userModel.js'));const bcrypt=(cov_2il22vaf37().s[2]++,require('bcrypt'));const nodemailer=(cov_2il22vaf37().s[3]++,require('nodemailer'));const saltRounds=(cov_2il22vaf37().s[4]++,12);// 2^12 = 4096 rounds
cov_2il22vaf37().s[5]++;const login=async(req,res)=>{cov_2il22vaf37().f[0]++;cov_2il22vaf37().s[6]++;try{cov_2il22vaf37().s[7]++;console.log('inside login');const{email,password}=(cov_2il22vaf37().s[8]++,req.body);cov_2il22vaf37().s[9]++;console.log(req.body,"-------");// Find the user by email
const user=(cov_2il22vaf37().s[10]++,await User.findOne({email}));cov_2il22vaf37().s[11]++;if(!user){cov_2il22vaf37().b[0][0]++;cov_2il22vaf37().s[12]++;return res.status(404).json({success:false,error:'User not found'});// Stop further execution
}else{cov_2il22vaf37().b[0][1]++;}// Check if the user is active
cov_2il22vaf37().s[13]++;if(!user.isActive){cov_2il22vaf37().b[1][0]++;cov_2il22vaf37().s[14]++;return res.status(403).json({success:false,error:'User is not active'});}else{cov_2il22vaf37().b[1][1]++;}// Check if the user is loging for the 1st time
cov_2il22vaf37().s[15]++;if(user.isFirstLogin){cov_2il22vaf37().b[2][0]++;cov_2il22vaf37().s[16]++;return res.status(200).json({success:false,loginStatus:{status:'first time login'}});}else{cov_2il22vaf37().b[2][1]++;}// Compare the provided password with the stored hash
const isMatch=(cov_2il22vaf37().s[17]++,await bcrypt.compare(password,user.password));// Don't forget the 'await' here
cov_2il22vaf37().s[18]++;if(!isMatch){cov_2il22vaf37().b[3][0]++;cov_2il22vaf37().s[19]++;return res.status(404).json({success:false,error:'Wrong password'});// Stop further execution
}else{cov_2il22vaf37().b[3][1]++;}// Generate a JWT token
const token=(cov_2il22vaf37().s[20]++,jwt.sign({_id:user._id,username:user.username,email:user.email,role:user.role,isActive:user.isActive,isFirstLogin:user.isFirstLogin,password:user.password},process.env.JWT_KEY,{expiresIn:'1h'}));// Send the response with the token and user details
cov_2il22vaf37().s[21]++;return res.status(200).json({success:true,token,user:{_id:user._id,username:user.username,email:user.email,role:user.role,isActive:user.isActive,isFirstLogin:user.isFirstLogin}});}catch(error){cov_2il22vaf37().s[22]++;// Handle server errors
return res.status(500).json({success:false,error:error.message});}};cov_2il22vaf37().s[23]++;const verify=(req,res)=>{cov_2il22vaf37().f[1]++;cov_2il22vaf37().s[24]++;console.log("verify user--------",req);cov_2il22vaf37().s[25]++;return res.status(200).json({success:true,user:req.user});};cov_2il22vaf37().s[26]++;const forgotPassword=async(req,res)=>{cov_2il22vaf37().f[2]++;const{email}=(cov_2il22vaf37().s[27]++,req.body);cov_2il22vaf37().s[28]++;try{const user=(cov_2il22vaf37().s[29]++,await User.findOne({email}));cov_2il22vaf37().s[30]++;if(!user){cov_2il22vaf37().b[4][0]++;cov_2il22vaf37().s[31]++;return res.status(404).json({success:false,message:"User not found"});}else{cov_2il22vaf37().b[4][1]++;}const token=(cov_2il22vaf37().s[32]++,jwt.sign({id:user._id},process.env.JWT_KEY,{expiresIn:'15m'}));const transporter=(cov_2il22vaf37().s[33]++,nodemailer.createTransport({service:'gmail',auth:{user:process.env.EMAIL_USER,pass:process.env.EMAIL_PASS}}));const resetLink=(cov_2il22vaf37().s[34]++,`http://localhost:5173/reset-password/${user._id}/${token}`);const mailOptions=(cov_2il22vaf37().s[35]++,{from:process.env.EMAIL_USER,to:email,subject:'Reset your Password',text:`Click on the link to reset your password: ${resetLink}`});cov_2il22vaf37().s[36]++;transporter.sendMail(mailOptions,(error,info)=>{cov_2il22vaf37().f[3]++;cov_2il22vaf37().s[37]++;if(error){cov_2il22vaf37().b[5][0]++;cov_2il22vaf37().s[38]++;console.error("Email error:",error);cov_2il22vaf37().s[39]++;return res.status(500).json({success:false,message:"Error sending email"});}else{cov_2il22vaf37().b[5][1]++;cov_2il22vaf37().s[40]++;return res.json({success:true,message:"Password reset email sent successfully"});}});}catch(error){cov_2il22vaf37().s[41]++;console.error("Server error:",error);cov_2il22vaf37().s[42]++;res.status(500).json({success:false,message:"Internal server error"});}};cov_2il22vaf37().s[43]++;const resetPassword=async(req,res)=>{cov_2il22vaf37().f[4]++;const{id,token}=(cov_2il22vaf37().s[44]++,req.params);const{password}=(cov_2il22vaf37().s[45]++,req.body);cov_2il22vaf37().s[46]++;console.log(req.body,'req.body======-----------');cov_2il22vaf37().s[47]++;try{const decoded=(cov_2il22vaf37().s[48]++,jwt.verify(token,process.env.JWT_KEY));cov_2il22vaf37().s[49]++;if(!decoded){cov_2il22vaf37().b[6][0]++;cov_2il22vaf37().s[50]++;return res.status(400).json({success:false,message:"Invalid or expired token"});}else{cov_2il22vaf37().b[6][1]++;}const hashedPassword=(cov_2il22vaf37().s[51]++,await bcrypt.hash(password,10));cov_2il22vaf37().s[52]++;await User.findByIdAndUpdate(id,{password:hashedPassword},{new:true});cov_2il22vaf37().s[53]++;await User.findByIdAndUpdate(id,{isFirstLogin:false},{new:true});cov_2il22vaf37().s[54]++;res.json({success:true,message:"Password reset successful"});}catch(err){cov_2il22vaf37().s[55]++;console.error(err);cov_2il22vaf37().s[56]++;res.status(500).json({success:false,message:"Internal server error"});}};cov_2il22vaf37().s[57]++;module.exports={login,verify,forgotPassword,resetPassword};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,